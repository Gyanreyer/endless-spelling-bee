---
meta:
  title: "Open Spelling Bee"
  description: "An open-source Spelling Bee game for the web"
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" :content="meta.description" />
    <meta name="generator" :content="eleventy.generator" />
    <title @html="meta.title"></title>
    <style @raw="getCss(page.url)" webc:keep></style>
    <script @raw="getJs(page.url)" webc:keep></script>
    <link rel="stylesheet" href="./styles/reset.css" />
    <link rel="manifest" href="/manifest.json" />
  </head>
  <body>
    <main x-data>
      <h1>Open Spelling Bee</h1>
      <div x-text="`Score: ${$store.game.currentScore}`"></div>
      <guess-notifications></guess-notifications>
      <letter-form></letter-form>
    </main>
    <script @raw="getJs(page.url, 'defer')" webc:keep></script>
    <script src="./js/gameStore.js" webc:bucket="defer"></script>
    <script src="/js/alea.min.js" webc:bucket="defer" webc:keep></script>
    <script type="module" webc:keep>
      import Alpine from "/js/alpine.mjs";
      import persist from "/js/alpine-persist.mjs";

      window.Alpine = Alpine;
      Alpine.plugin(persist);
      Alpine.start();
    </script>
    <script webc:bucket="defer">
      if ("serviceWorker" in navigator) {
        navigator.serviceWorker.register("/sw.js");
      }
    </script>
  </body>
</html>
