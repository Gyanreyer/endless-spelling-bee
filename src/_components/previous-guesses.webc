<div webc:root="override" x-data="previousGuesses">
  <button
    type="button"
    class="prev-guess-modal-btn"
    x-on:click="if($store.game.guessedWords.length) $refs.prevguessdialog.showModal()"
    x-bind:aria-label="$store.game.guessedWords.length > 0 ? 'Show previous guesses' : null"
    x-bind:aria-disabled="$store.game.guessedWords.length === 0"
    x-data="{isInitialRender: true}"
    x-init="$nextTick(()=>isInitialRender=false)"
  >
    <template x-if="$store.game.guessedWords.length === 0">
      <span>No words guessed yet</span>
    </template>
    <template x-for="word in mostRecentGuessedWords" x-bind:key="word">
      <span
        x-text="word + '&nbsp;'"
        x-data="{show: isInitialRender}"
        x-show="show"
        x-init="$nextTick(()=>show=true)"
        x-transition:enter="enter"
        x-transition:enter-start="enter-start"
        x-transition:enter-end="enter-end"
      ></span>
    </template>
  </button>
  <modal x-ref="prevguessdialog">
    <h2 x-text="`You have found ${$store.game.guessedWords.length} words`"></h2>
    <div
      id="word-page-wrapper"
      x-data="wordPageWrapper"
      x-bind:style="`--max-row-count: ${maxPageSize/2};`"
    >
      <template x-for="(page, index) in guessedWordPages" x-bind:key="page.id">
        <ul
          x-data="guessedWordPage"
          x-bind:id="`word-page-${index}`"
          x-bind:page-button-id="`page-btn-${index}`"
          class="word-list"
        >
          <template x-for="word in page.words" x-bind:key="word">
            <li x-text="word" x-data></li>
          </template>
        </ul>
      </template>
    </div>
    <div class="page-scroll-buttons">
      <template x-for="(page, index) in guessedWordPages" x-bind:key="index">
        <button
          type="button"
          x-bind:id="`page-btn-${index}`"
          x-on:click="const wordPageWrapper = $refs.prevguessdialog.querySelector('#word-page-wrapper'); wordPageWrapper.scrollTo({ top: 0, left: wordPageWrapper.querySelector(`#word-page-${index}`).offsetLeft, behavior: 'smooth' })"
          x-bind:aria-label="`Go to page ${index + 1}`"
        ></button>
      </template>
    </div>
  </modal>
</div>
<style webc:scoped>
  .prev-guess-modal-btn {
    display: block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
    margin: 1rem 0;
    padding: 0.5rem 1rem;
    border-radius: 0.3rem;
    background-color: var(--gray);
    border: none;
    box-shadow: var(--shadow);
  }

  .prev-guess-modal-btn[aria-disabled="true"] {
    opacity: 0.6;
  }

  .prev-guess-modal-btn span {
    display: inline-block;
    margin-right: 0.5ch;
  }

  .prev-guess-modal-btn span.enter {
    transition: opacity 0.15s, transform 0.15s;
  }

  .prev-guess-modal-btn span.enter-start {
    opacity: 0;
    transform: translateX(10%);
  }

  .prev-guess-modal-btn span.enter-start:only-of-type {
    /* If this is the first word, animate up instead of sideways */
    transform: translateY(20%);
  }

  .prev-guess-modal-btn span.enter-end {
    opacity: 1;
    transform: translateX(0);
  }

  dialog h2 {
    margin: 1.5rem 0 0.5rem;
  }

  #word-page-wrapper {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    display: flex;
    flex-flow: row nowrap;
    gap: 2rem;
  }

  .word-list {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(var(--max-row-count), 1fr);
    grid-auto-flow: column;
    gap: 1rem 2rem;
    margin: 0;
    padding: 1.5rem 0 2rem;
    font-size: 1.2rem;
    width: 100%;
    min-width: 100%;
    list-style: none;
    scroll-snap-align: center;
  }

  .word-list li {
    margin: 0;
    padding-bottom: 0.25rem;
    border-bottom: 1px solid var(--gray);
  }

  .page-scroll-buttons {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .page-scroll-buttons button {
    position: relative;
    width: 0.8rem;
    height: 0.8rem;
    padding: 0;
    border-radius: 50%;
    background: var(--gray);
    border: none;
    box-shadow: var(--shadow);
    --page-scroll-pct: 0%;
  }

  .page-scroll-buttons button::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: var(--yellow);
    transform: scale(var(--page-scroll-pct));
    transform-origin: center;
    transition: transform 0.1s;
  }
</style>
